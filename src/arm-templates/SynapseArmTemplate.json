{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.1",
    "parameters": {
        "name": {
            "type": "string",
            "metadata": {
                "description": "Name of new synapse workspace"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Azure region, ex., eastus"
            }
        },
        "defaultDataLakeStorageAccountName": {
            "type": "string",
            "metadata": {
                "description": "Name of Data Lake Storage Gen2 account to be used as primary storage account for the workspace, holding catalog data and metadata associated with the workspace"
            }
        },
        "isNewStorageAccount": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "True if the Data Lake storage Gen2 account does not exist and should be created as new for use with Synapse workspace, false otherwise"
            }
        },
        "defaultDataLakeStorageFilesystemName": {
            "type": "string",
            "metadata": {
                "description": "Name of container in storage account to be used as file system for the workspace"
            }
        },
        "isNewFileSystemOnly": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "True if the file system does not exist in storage account and should be created as new for use with Synapse workspace, false otherwise. Leave it false if 'isNewStorageAccount' is true"
            }
        },
        "sqlAdministratorLogin": {
            "type": "string",
            "defaultValue": "sqladminuser",
            "metadata": {
                "description": "Username for Synapse SQL server pool administrator"
            }
        },
        "sqlAdministratorLoginPassword": {
            "type": "secureString",
            "defaultValue": "",
            "metadata": {
                "description": "SQL password for Synapse SQL server pool administrator"
            }
        },
        "setWorkspaceIdentityRbacOnStorageAccount": {
            "type": "bool",
            "metadata": {
                "description": "Set to true if you have Owner or User Access Administrator access on the resource group, false otherwise. There will be additional instructions to set it up if you don't have Owner/User Access Administrator access"
            }
        },
        "setSbdcRbacOnStorageAccount": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Set to true if you have owner or User Access Administrator access on the resource group of storage account. There are further instructions provided if you don't have Owner/User Access Administrator access"
            }
        },
        "setWorkspaceMsiByPassOnStorageAccount": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Set to true if you want to enable network ACLs for the Data Lake Storage Gen2 storage account"
            }
        },
        "createManagedPrivateEndpoint": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Enable this to ensure that connection from your workspace to your data sources use Azure Private Links"
            }
        },
        "azureADOnlyAuthentication": {
            "type": "bool",
            "defaultValue": false
        },
        "allowAllConnections": {
            "type": "bool",
            "defaultValue": true
        },
        "managedVirtualNetwork": {
            "type": "string",
            "allowedValues": [
                "default",
                ""
            ],
            "defaultValue": ""
        },
        "tagValues": {
            "type": "object",
            "defaultValue": {}
        },
        "storageSubscriptionID": {
            "type": "string",
            "defaultValue": "[subscription().subscriptionId]"
        },
        "storageResourceGroupName": {
            "type": "string",
            "defaultValue": "[resourceGroup().name]"
        },
        "storageLocation": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]"
        },
        "storageRoleUniqueId": {
            "type": "string",
            "defaultValue": "[newGuid()]"
        },
        "managedResourceGroupName": {
            "type": "string",
            "defaultValue": ""
        },
        "storageAccessTier": {
            "type": "string",
            "defaultValue": "Hot"
        },
        "storageAccountType": {
            "type": "string",
            "defaultValue": "Standard_RAGRS"
        },
        "storageSupportsHttpsTrafficOnly": {
            "type": "bool",
            "defaultValue": true
        },
        "storageKind": {
            "type": "string",
            "defaultValue": "StorageV2",
            "allowedValues": [
                "StorageV2"
            ]
        },
        "minimumTlsVersion": {
            "type": "string",
            "defaultValue": "TLS1_2"
        },
        "storageIsHnsEnabled": {
            "type": "bool",
            "defaultValue": true,
            "allowedValues": [
                true
            ]
        },
        "userObjectId": {
            "type": "string",
            "metadata": {
                "description": "Find your userObjectId by following instructions here: https://docs.microsoft.com/en-us/partner-center/find-ids-and-domain-names"
            }
        },
        "workspaceStorageAccountProperties": {
            "type": "object",
            "defaultValue": {}
        },
        "sparkPoolName": {
            "type": "string",
            "maxLength": 15,
            "metadata": {
                "description": "Name of apache spark pool to be created in the workspace"
            }
        },
        "sparkPoolTags": {
            "type": "object",
            "defaultValue": {}
        },
        "sparkAutoScaleEnabled": {
            "type": "bool",
            "defaultValue": true
        },
        "sparkIsolatedComputeEnabled": {
            "type": "bool",
            "defaultValue": false
        },
        "sparkMinNodeCount": {
            "type": "int",
            "defaultValue": 3
        },
        "sparkMaxNodeCount": {
            "type": "int",
            "defaultValue": 10
        },
        "sparkNodeCount": {
            "type": "int",
            "defaultValue": 3
        },
        "sparkNodeSizeFamily": {
            "type": "string",
            "defaultValue": "MemoryOptimized"
        },
        "sparkNodeSize": {
            "type": "string",
            "defaultValue": "Small"
        },
        "sparkAutoPauseEnabled": {
            "type": "bool",
            "defaultValue": true
        },
        "sparkAutoPauseDelayInMinutes": {
            "type": "int",
            "defaultValue": 15
        },
        "sparkVersion": {
            "type": "string",
            "defaultValue": "3.2"
        },
        "sparkConfigPropertiesFileName": {
            "type": "string",
            "defaultValue": ""
        },
        "sparkConfigPropertiesContent": {
            "type": "string",
            "defaultValue": ""
        },
        "sessionLevelPackagesEnabled": {
            "type": "bool",
            "defaultValue": false
        },
        "dynamicExecutorAllocation": {
            "type": "bool",
            "defaultValue": true
        },
        "sparkMinExecutorCount": {
            "type": "int",
            "defaultValue": 3
        },
        "sparkMaxExecutorCount": {
            "type": "int",
            "defaultValue": 9
        },
        "cacheSize": {
            "type": "int",
            "defaultValue": 0
        }
    },
    "variables": {
        "storageBlobDataContributorRoleID": "ba92f5b4-2d11-453d-a403-e96b0029c9fe",
        "defaultDataLakeStorageAccountUrl": "[concat('https://', parameters('defaultDataLakeStorageAccountName'), '.dfs.core.windows.net')]",
        "defaultAdlsGen2AccountResourceId": "[concat('/subscriptions/', parameters('storageSubscriptionID'), '/resourceGroups/', parameters('storageResourceGroupName'), '/providers/Microsoft.Storage/storageAccounts/', parameters('defaultDataLakeStorageAccountName'))]"
    },
    "resources": [
        {
            "apiVersion": "2021-06-01-preview",
            "name": "[parameters('name')]",
            "location": "[parameters('location')]",
            "type": "Microsoft.Synapse/workspaces",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "defaultDataLakeStorage": {
                    "accountUrl": "[variables('defaultDataLakeStorageAccountUrl')]",
                    "filesystem": "[parameters('defaultDataLakeStorageFilesystemName')]",
                    "resourceId": "[variables('defaultAdlsGen2AccountResourceId')]",
                    "createManagedPrivateEndpoint": "[parameters('createManagedPrivateEndpoint')]"
                },
                "managedVirtualNetwork": "[parameters('managedVirtualNetwork')]",
                "managedResourceGroupName": "[parameters('managedResourceGroupName')]",
                "azureADOnlyAuthentication": "[parameters('azureADOnlyAuthentication')]",
                "sqlAdministratorLogin": "[parameters('sqlAdministratorLogin')]",
                "sqlAdministratorLoginPassword": "[parameters('sqlAdministratorLoginPassword')]"
            },
            "resources": [
                {
                    "condition": "[parameters('allowAllConnections')]",
                    "apiVersion": "2021-06-01-preview",
                    "dependsOn": [
                        "[concat('Microsoft.Synapse/workspaces/', parameters('name'))]"
                    ],
                    "location": "[parameters('location')]",
                    "name": "allowAll",
                    "properties": {
                        "startIpAddress": "0.0.0.0",
                        "endIpAddress": "255.255.255.255"
                    },
                    "type": "firewallrules"
                }
            ],
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', parameters('defaultDataLakeStorageAccountName'))]",
                "[concat('Microsoft.Resources/deployments/', parameters('defaultDataLakeStorageFilesystemName'))]"
            ],
            "tags": "[parameters('tagValues')]"
        },
        {
            "condition": "[parameters('setWorkspaceIdentityRbacOnStorageAccount')]",
            "apiVersion": "2019-05-01",
            "name": "StorageRoleDeploymentResource",
            "type": "Microsoft.Resources/deployments",
            "subscriptionId": "[parameters('storageSubscriptionID')]",
            "resourceGroup": "[parameters('storageResourceGroupName')]",
            "dependsOn": [
                "[concat('Microsoft.Synapse/workspaces/', parameters('name'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.Storage/storageAccounts/providers/roleAssignments",
                            "apiVersion": "2018-09-01-preview",
                            "name": "[concat(parameters('defaultDataLakeStorageAccountName'), '/Microsoft.Authorization/',  guid(concat(resourceGroup().id, '/', variables('storageBlobDataContributorRoleID'), '/', parameters('name'), '/', parameters('storageRoleUniqueId'))))]",
                            "location": "[parameters('storageLocation')]",
                            "properties": {
                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('storageBlobDataContributorRoleID'))]",
                                "principalId": "[reference(concat('Microsoft.Synapse/workspaces/', parameters('name')), '2021-06-01', 'Full').identity.principalId]",
                                "principalType": "ServicePrincipal"
                            }
                        },
                        {
                            "condition": "[parameters('setSbdcRbacOnStorageAccount')]",
                            "type": "Microsoft.Storage/storageAccounts/providers/roleAssignments",
                            "apiVersion": "2018-09-01-preview",
                            "name": "[concat(parameters('defaultDataLakeStorageAccountName'), '/Microsoft.Authorization/',  guid(concat(resourceGroup().id, '/', variables('storageBlobDataContributorRoleID'), '/', parameters('userObjectId'), '/', parameters('storageRoleUniqueId'))))]",
                            "properties": {
                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('storageBlobDataContributorRoleID'))]",
                                "principalId": "[parameters('userObjectId')]",
                                "principalType": "User"
                            }
                        }
                    ]
                }
            }
        },
        {
            "condition": "[parameters('setWorkspaceMsiByPassOnStorageAccount')]",
            "apiVersion": "2019-05-01",
            "name": "UpdateStorageAccountNetworkingAcls",
            "type": "Microsoft.Resources/deployments",
            "subscriptionId": "[parameters('storageSubscriptionID')]",
            "resourceGroup": "[parameters('storageResourceGroupName')]",
            "dependsOn": [
                "[concat('Microsoft.Synapse/workspaces/', parameters('name'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.Storage/storageAccounts",
                            "apiVersion": "2021-01-01",
                            "location": "[parameters('storageLocation')]",
                            "name": "[parameters('defaultDataLakeStorageAccountName')]",
                            "properties": "[parameters('workspaceStorageAccountProperties')]"
                        }
                    ]
                }
            }
        },
        {
            "condition": "[parameters('isNewStorageAccount')]",
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[parameters('defaultDataLakeStorageAccountName')]",
            "apiVersion": "2021-09-01",
            "location": "[parameters('storageLocation')]",
            "properties": {
                "accessTier": "[parameters('storageAccessTier')]",
                "supportsHttpsTrafficOnly": "[parameters('storageSupportsHttpsTrafficOnly')]",
                "isHnsEnabled": "[parameters('storageIsHnsEnabled')]",
                "minimumTlsVersion": "[parameters('minimumTlsVersion')]"
            },
            "sku": {
                "name": "[parameters('storageAccountType')]"
            },
            "kind": "[parameters('storageKind')]",
            "tags": {},
            "resources": [
                {
                    "condition": "[parameters('isNewStorageAccount')]",
                    "name": "[concat('default/', parameters('defaultDataLakeStorageFilesystemName'))]",
                    "type": "blobServices/containers",
                    "apiVersion": "2021-01-01",
                    "properties": {
                        "publicAccess": "None"
                    },
                    "dependsOn": [
                        "[concat('Microsoft.Storage/storageAccounts/', parameters('defaultDataLakeStorageAccountName'))]"
                    ]
                }
            ]
        },
        {
            "condition": "[parameters('isNewFileSystemOnly')]",
            "apiVersion": "2019-05-01",
            "name": "[parameters('defaultDataLakeStorageFilesystemName')]",
            "type": "Microsoft.Resources/deployments",
            "subscriptionId": "[parameters('storageSubscriptionID')]",
            "resourceGroup": "[parameters('storageResourceGroupName')]",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
                            "name": "[concat(parameters('defaultDataLakeStorageAccountName'), '/default/', parameters('defaultDataLakeStorageFilesystemName'))]",
                            "apiVersion": "2021-01-01",
                            "properties": {
                                "publicAccess": "None"
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Synapse/workspaces/bigDataPools",
            "apiVersion": "2021-06-01-preview",
            "name": "[concat(parameters('name'), '/', parameters('sparkPoolName'))]",
            "location": "[parameters('location')]",
            "tags": "[parameters('sparkPoolTags')]",
            "dependsOn": [
                "[concat('Microsoft.Synapse/workspaces/', parameters('name'))]"
            ],
            "properties": {
                "nodeCount": "[parameters('sparkNodeCount')]",
                "nodeSizeFamily": "[parameters('sparkNodeSizeFamily')]",
                "nodeSize": "[parameters('sparkNodeSize')]",
                "autoScale": {
                    "enabled": "[parameters('sparkAutoScaleEnabled')]",
                    "minNodeCount": "[parameters('sparkMinNodeCount')]",
                    "maxNodeCount": "[parameters('sparkMaxNodeCount')]"
                },
                "autoPause": {
                    "enabled": "[parameters('sparkAutoPauseEnabled')]",
                    "delayInMinutes": "[parameters('sparkAutoPauseDelayInMinutes')]"
                },
                "sparkVersion": "[parameters('sparkVersion')]",
                "sparkConfigProperties": {
                    "filename": "[parameters('sparkConfigPropertiesFileName')]",
                    "content": "[parameters('sparkConfigPropertiesContent')]"
                },
                "isComputeIsolationEnabled": "[parameters('sparkIsolatedComputeEnabled')]",
                "sessionLevelPackagesEnabled": "[parameters('sessionLevelPackagesEnabled')]",
                "dynamicExecutorAllocation": {
                    "enabled": "[parameters('dynamicExecutorAllocation')]",
                    "minExecutors": "[parameters('sparkMinExecutorCount')]",
                    "maxExecutors": "[parameters('sparkMaxExecutorCount')]"
                },
                "cacheSize": "[parameters('cacheSize')]"
            }
        }
     ],
    "outputs": {
        "SynapseWorkspaceName": {
            "type": "string",
            "value": "[parameters('name')]"
        },
        "storageSubscriptionID": {
            "type": "string",
            "value": "[parameters('storageSubscriptionID')]"
        },
        "storageResourceGroupName": {
            "type": "string",
            "value": "[parameters('storageResourceGroupName')]"
        },
        "dataLakeStorageAccountName": {
            "type": "string",
            "value": "[parameters('defaultDataLakeStorageAccountName')]"
        },
        "dataLakeFileSystemName": {
            "type": "string",
            "value": "[parameters('defaultDataLakeStorageFilesystemName')]"
        }
    }
}